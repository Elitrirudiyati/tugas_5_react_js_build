{"version":3,"sources":["Lib/DaftarMakanan.js","Form/FormMakanan.js","Page/MenuMakanan.js","App.js","serviceWorker.js","index.js"],"names":["DaftarMakanan","NamaMakanan","Harga","img","FormMakanan","props","state","pesanan","jumlah","hendleChange","bind","hendleSubmit","hendleChangeJumlah","React","createRef","e","this","setState","target","value","preventDefault","alert","current","focus","onSubmit","onChange","type","ref","placeholder","Component","listmakanan","MenuMakanan","map","data","index","key","src","alt","width","height","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8OA8BeA,EA5BO,CACtB,CACCC,YAAa,cACbC,MAAO,SACPC,IAAI,4EAEL,CACCF,YAAa,OACbC,MAAO,SACPC,IAAI,sEAEL,CACCF,YAAa,OACbC,MAAO,SACPC,IAAI,8EAEL,CACCF,YAAa,OACbC,MAAO,SACPC,IAAI,2GAEL,CACCF,YAAa,cACbC,MAAO,SACPC,IAAI,6F,OC+BUC,E,kDAtDf,WAAYC,GAAO,IAAD,8BACjB,cAAMA,IACDC,MAAM,CAACC,QAAQ,GAAIC,OAAO,IAE/B,EAAKC,aAAa,EAAKA,aAAaC,KAAlB,gBAClB,EAAKC,aAAa,EAAKA,aAAaD,KAAlB,gBAClB,EAAKE,mBAAmB,EAAKA,mBAAmBF,KAAxB,gBACxB,EAAKH,QAAQM,IAAMC,YAPF,E,yDAULC,GACZC,KAAKC,SAAS,CAACV,QAASQ,EAAEG,OAAOC,U,yCAEfJ,GAClBC,KAAKC,SAAS,CAACT,OAAQO,EAAEG,OAAOC,U,mCAEpBJ,GACZA,EAAEK,iBACFC,MAAM,wBACLL,KAAKV,MAAMC,QACX,sBACAS,KAAKV,MAAME,QAEZQ,KAAKC,SAAS,CAACV,QAAQ,GAAIC,OAAO,KAClCQ,KAAKT,QAAQe,QAAQC,U,+BAIrB,OACC,6BACA,gCACA,0BAAMC,SAAUR,KAAKL,cAErB,2BAAOc,SAAUT,KAAKP,aACtBiB,KAAK,OACLP,MAAOH,KAAKV,MAAMC,QAClBoB,IAAKX,KAAKT,QACVqB,YAAY,yBAEZ,2BAAOF,KAAK,SACZP,MAAOH,KAAKV,MAAME,OAClBiB,SAAUT,KAAKJ,mBACfgB,YAAY,2BAEZ,6BACA,2BAAOF,KAAK,SAASP,MAAM,iB,GA9CHU,aCEpBC,EAAc,CACpB,CACC7B,YAAc,cACdC,MAAQ,UAET,CACCD,YAAc,OACdC,MAAQ,UAGT,CACCD,YAAc,OACdC,MAAQ,UAET,CACCD,YAAc,OACdC,MAAQ,UAET,CACCD,YAAc,cACdC,MAAQ,UAET,CACCD,YAAc,cACdC,MAAQ,UAET,CACCD,YAAc,aACdC,MAAQ,UAGT,CACCD,YAAc,QACdC,MAAQ,UAET,CACCD,YAAc,WACdC,MAAQ,WAyCM6B,E,uKAnCb,OACC,6BACA,sDACA,+BACA,+BACA,4BACC/B,EAAcgC,KAAI,SAACC,EAAKC,GACxB,OACA,wBAAIC,IAAKD,GACT,yBAAKE,IAAKH,EAAK9B,IAAKkC,IAAI,iBAAiBC,MAAM,MAAMC,OAAO,QAC5D,gCACA,2BAAIN,EAAKhC,aACT,0CAAgBgC,EAAK/B,eAQtB,8CACC4B,EAAYE,KAAI,SAACC,EAAKC,GACtB,OACA,yBAAKC,IAAKD,GACV,2BACCD,EAAKhC,YADN,gBACgCgC,EAAK/B,WAKtC,kBAAC,EAAD,W,GAhCuB2B,a,MCjCXW,MARf,WACE,OACE,yBAAKC,UAAU,OACf,kBAAC,EAAD,QCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.81f1466d.chunk.js","sourcesContent":["\r\n\r\nconst DaftarMakanan = [\r\n{\r\n\tNamaMakanan :\"Nasi Padang\",\r\n\tHarga :\"20.000\",\r\n\timg:\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/nasipadang.jpg\"\r\n},\r\n{\r\n\tNamaMakanan :\"Sate\",\r\n\tHarga :\"20.000\",\r\n\timg:\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sate.png\"\r\n},\r\n{\r\n\tNamaMakanan :\"Soto\",\r\n\tHarga :\"10.000\",\r\n\timg:\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sotolamongan.png\"\r\n},\r\n{\r\n\tNamaMakanan :\"Uduk\",\r\n\tHarga :\"10.000\",\r\n\timg:\"https://www.dbs.com/iwov-resources/images/newsroom/indonesia/Blog/masakan%20nusantara/nasi%20kentut.png\"\r\n},\r\n{\r\n\tNamaMakanan :\"Nasi Kuning\",\r\n\tHarga :\"15.000\",\r\n\timg:\"https://blog.tokowahab.com/wp-content/uploads/2020/03/Resep-Nasi-Kuning-Tumpeng-Mini.jpg\"\r\n}\r\n];\r\n\r\nexport default DaftarMakanan;","import React, {Component} from \"react\";\r\n\r\nclass FormMakanan extends Component{\r\nconstructor(props){\r\n\tsuper(props);\r\n\tthis.state={pesanan:\"\", jumlah:''};\r\n\r\n\tthis.hendleChange=this.hendleChange.bind(this);\r\n\tthis.hendleSubmit=this.hendleSubmit.bind(this);\r\n\tthis.hendleChangeJumlah=this.hendleChangeJumlah.bind(this);\r\n\tthis.pesanan=React.createRef()\r\n}\r\n\r\nhendleChange(e){\r\n\tthis.setState({pesanan: e.target.value});\r\n}\r\nhendleChangeJumlah(e){\r\n\tthis.setState({jumlah: e.target.value});\r\n}\r\nhendleSubmit(e){\r\n\te.preventDefault()\r\n\talert(\"Pesanan Anda Adalah :\" +\r\n\t\tthis.state.pesanan +\r\n\t\t\"| Jumlah Pesanan : \" +\r\n\t\tthis.state.jumlah\r\n\t);\r\n\tthis.setState({pesanan:\"\", jumlah:\"\"});\r\n\tthis.pesanan.current.focus();\r\n\r\n}\r\nrender(){\r\n\treturn (\r\n\t\t<div>\r\n\t\t<center>\r\n\t\t<form onSubmit={this.hendleSubmit}\r\n\t\t>\r\n\t\t<input onChange={this.hendleChange}\r\n\t\ttype=\"text\" \r\n\t\tvalue={this.state.pesanan}\r\n\t\tref={this.pesanan}\r\n\t\tplaceholder=\"Masukan Pesanan Anda\"\r\n\t\t/>\r\n\t\t<input type=\"number\"\r\n\t\tvalue={this.state.jumlah}\r\n\t\tonChange={this.hendleChangeJumlah}\r\n\t\tplaceholder=\"Masukan Jumlah Pesanan\"\r\n\t\t/>\r\n\t\t<br></br>\r\n\t\t<input type=\"submit\" value=\"Pesan\"/>\r\n\t\t</form>\r\n\t\t</center>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nexport default FormMakanan;","import React, {Component} from \"react\";\r\nimport DaftarMakanan from \"../Lib/DaftarMakanan\";\r\nimport FormMakanan from \"../Form/FormMakanan\"\r\n\r\nconst listmakanan = [\r\n{\r\n\tNamaMakanan : \"Nasi Padang\",\r\n\tHarga : \"20.000\"\r\n},\r\n{\r\n\tNamaMakanan : \"Sate\",\r\n\tHarga : \"20.000\"\r\n\r\n},\r\n{\r\n\tNamaMakanan : \"Soto\",\r\n\tHarga : \"10.000\"\r\n},\r\n{\r\n\tNamaMakanan : \"Uduk\",\r\n\tHarga : \"10.000\"\r\n},\r\n{\r\n\tNamaMakanan : \"Nasi Kuning\",\r\n\tHarga : \"15.000\"\r\n},\r\n{\r\n\tNamaMakanan : \"Ayam Geprek\",\r\n\tHarga : \"15.000\"\r\n},\r\n{\r\n\tNamaMakanan : \"Pecel Lele\",\r\n\tHarga : \"15.000\"\r\n\r\n},\r\n{\r\n\tNamaMakanan : \"Pecel\",\r\n\tHarga : \"10.000\"\r\n},\r\n{\r\n\tNamaMakanan : \"Mie Ayam\",\r\n\tHarga : \"10.000\"\r\n}\r\n];\r\n\r\nclass MenuMakanan extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<h3>Daftar Makanan Favorit</h3>\r\n\t\t\t<table>\r\n\t\t\t<tbody>\r\n\t\t\t<tr>\r\n\t\t\t{DaftarMakanan.map((data,index)=>{\r\n\t\t\t\treturn(\r\n\t\t\t\t<td key={index}>\r\n\t\t\t\t<img src={data.img} alt=\"Produk Makanan\" width=\"150\" height=\"100\"/>\r\n\t\t\t\t<center>\r\n\t\t\t\t<p>{data.NamaMakanan}</p>\r\n\t\t\t\t<p>Harga : Rp. {data.Harga}</p>\r\n\t\t\t\t</center>\r\n\t\t\t\t</td>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t\t<h4> List Makanan </h4>\r\n\t\t\t{listmakanan.map((data,index)=>{\r\n\t\t\t\treturn(\r\n\t\t\t\t<div key={index}>\r\n\t\t\t\t<p>\r\n\t\t\t\t{data.NamaMakanan} | Harga Rp. {data.Harga}\r\n\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t<FormMakanan/>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\nexport default MenuMakanan;\r\n\r\n\r\n","import React from 'react';\nimport MenuMakanan from'./Page/MenuMakanan';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <MenuMakanan/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}